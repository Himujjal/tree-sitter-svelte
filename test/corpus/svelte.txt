================
Raw Text Expression
================
<script context="module">
    let name = 'world';
</script>
<h1>Hello {name'<>{}``"\''""``{}}!</h1>
----

(document
    (script_element
        (start_tag (tag_name)
            (attribute (attribute_name) (quoted_attribute_value (attribute_value))))
        (raw_text)
        (end_tag (tag_name)))
    (text)
    (element
        (start_tag (tag_name))
        (text)
        (expression (raw_text_expr))
        (text)
        (end_tag (tag_name)))
)

==============
Dynamic Expression Attribute
==============
<img src={src} alt="A man dances">
<Info {...pkg} />
----
(document
    (element
        (start_tag (tag_name)
            (attribute (attribute_name) (expr_attribute_value (raw_text_expr)))
            (attribute (attribute_name) (quoted_attribute_value (attribute_value)))
        )
        
    )
    (element (self_closing_tag (tag_name)
            (attribute (attribute_name (raw_text_expr)))
        )
    )
)


===============
Logical blocks
===============
{#if user.loggedIn}
	<button on:click={toggle}>logged in</button>
{:else if hello}
    <li></li>
{/if}

{hello}

{#each cats as cat}
    <li></li>
{/each}
}

{@html '<p>hello world</p>'}

{new Instance(hello).map(() => {console.log('hello')})}
-------

(document
    (special_block_start (if_tag) (raw_text_expr))
    (text)
    (element
        (start_tag
            (tag_name)
            (attribute (attribute_name) (expr_attribute_value (raw_text_expr)))
        )
        (text)
        (end_tag (tag_name))
    )
    (text)
    (special_block_intermediate (elseif_tag) (raw_text_expr))
    (text)
    (element (start_tag (tag_name)) (end_tag (tag_name)))
    (text)
    (special_block_end (if_tag))
    (text)
    (expression (raw_text_expr))
    (text)
    (special_block_start (each_tag) (raw_text_expr))
    (text)
    (element (start_tag (tag_name)) (end_tag (tag_name)))
    (text)
    (special_block_end (each_tag))
    (text)
    (expression (html) (raw_text_expr))
    (text)
    (expression (raw_text_expr))
)


====================
Special elements
=====================
<svelte:head>
    <link rel="stylesheet" href="tutorial/dark-theme.css"/>
</svelte:head>
<svelte:options immutable={true} />
----
(document
    (element
        (start_tag (tag_name))
        (text)
        (element
            (self_closing_tag (tag_name)
                (attribute (attribute_name) (quoted_attribute_value (attribute_value)))
                (attribute (attribute_name) (quoted_attribute_value (attribute_value)))
            )
        )
        (text)
        (end_tag (tag_name))
    )
    (text)
    (element
        (self_closing_tag (tag_name)
            (attribute (attribute_name) (expr_attribute_value (raw_text_expr)))
        )
    )
)


